<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>trademe.git</title>
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="style.css">
</head>
<body>
	<main>
		<div class="top">
			<h1>bouncytorch's trading bot</h1>
			<form action="/logout" method="POST"><button class="logout" type="submit"></button></form>
		</div>
		<div class="items">
			<div class="placeholder"></div>
			<div class="status-bar">fetching your inventory <span class="loader"></span></div>
		</div>
		<div class="nav">
			<button class="button-grn" style="padding-right: 79px" disabled>trade</button>
			<input type="url" placeholder="Your Trade URL">
		</div>
	</main>
</body>
<script>
	function watchForHover() {
		// lastTouchTime is used for ignoring emulated mousemove events
		let lastTouchTime = 0
	  
		function enableHover() {
		  if (new Date() - lastTouchTime < 500) return
		  document.body.classList.add('hover')
		}
	  
		function disableHover() {
		  document.body.classList.remove('hover')
		}
	  
		function updateLastTouchTime() {
		  lastTouchTime = new Date()
		}
	  
		document.addEventListener('touchstart', updateLastTouchTime, true)
		document.addEventListener('touchstart', disableHover, true)
		document.addEventListener('mousemove', enableHover, true)
	  
		enableHover()
	}
	watchForHover()
	let f = 0;
	document.getElementsByClassName('nav')[0].getElementsByTagName('input')[0].oninput = () => btnCheck()
	function btnCheck() {
		if (f > 0 && document.getElementsByClassName('nav')[0].getElementsByTagName('input')[0].value.length > 0) document.getElementsByClassName('button-grn')[0].removeAttribute('disabled')
		else document.getElementsByClassName('button-grn')[0].setAttribute('disabled', '')
	}
	fetch('/api/items').then(body => {
		if (body.status == 500) {
			document.getElementsByClassName('status-bar')[0].innerHTML = 'internal server error. reload the page.'
			document.querySelector('.status-bar::before').style.opacity = 1;
			return 0;
		}
		else if (body.status == 401) {
			document.getElementsByClassName('status-bar')[0].innerHTML = 'your profile is private. set it to public and reload the page.'
			return 0;
		}
		else {
			return body.json()
		}
	}).then(data => {
		if (data == 0) return;
		document.getElementsByClassName('status-bar')[0].style.opacity = 0;
		document.getElementsByClassName('placeholder')[0].style.opacity = 0;
		setTimeout(() => {
			document.getElementsByClassName('items')[0].innerHTML = ''
			const rec = (index) => {
				const img = new Image(),
				button = document.createElement('button');
				img.src = `https://steamcommunity-a.akamaihd.net/economy/image/${data[index].icon}`
				img.setAttribute('draggable', 'false');
				button.classList.add('item', data[index].grade);
				button.setAttribute('data-id', data[index].id);
				button.onclick = () => {
					button.toggleAttribute('selected')
					f += button.hasAttribute('selected') ? 1 : -1
					btnCheck();
				};
				button.appendChild(img);
				button.innerHTML += `<h2>${data[index].type ? data[index].type : ' '}</h2>
				<div class="item-desc">
					<p>${data[index].name}</p>
					<p>${data[index].price ? `$${data[index].price}` : '$X'}</p>
				</div>`
				img.onload = () => {
					document.getElementsByClassName('items')[0].appendChild(button)
					if (data.length - 1 > index) rec(index+1);
				};
			}
			rec(0);
		}, 500)
	});
</script>
</html>